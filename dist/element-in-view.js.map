{"version":3,"file":"element-in-view.js","sources":["../src/element-in-view.js"],"sourcesContent":["/*----------------------\nElement In View\n----------------------*/\n\nexport default function elementInView(\n\telement,\n\telementPart = 'top',\n\toffsetPercentage = 0\n) {\n\t// Window Measurements\n\n\tlet windowHeight = window.innerHeight;\n\n\t// Element Measurements\n\n\tconst elementTop = element.getBoundingClientRect().top;\n\tconst elementHeight = element.offsetHeight;\n\tconst elementMiddle = elementTop + elementHeight / 2;\n\tconst elementBottom = elementTop + elementHeight;\n\n\t// Capture the position of the part of the element we are tracking.\n\n\tlet elementPosition;\n\n\tif (elementPart.toLowerCase() === 'top') {\n\t\telementPosition = elementTop;\n\t} else if (elementPart.toLowerCase() === 'middle') {\n\t\telementPosition = elementMiddle;\n\t} else if (elementPart.toLowerCase() === 'bottom') {\n\t\telementPosition = elementBottom;\n\t} else {\n\t\telementPosition = elementTop;\n\t}\n\n\t// Calculate the offset pixel distance\n\n\tconst offsetPixels = windowHeight * (offsetPercentage / 100);\n\n\t// Check if the element is in view.\n\n\tconst elementInView =\n\t\telementPosition + offsetPixels <= windowHeight && elementBottom >= 0;\n\n\tif (elementInView) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n"],"names":["element","elementPart","offsetPercentage","windowHeight","window","innerHeight","elementTop","getBoundingClientRect","top","elementHeight","offsetHeight","elementMiddle","elementBottom","toLowerCase"],"mappings":"eAIA,SACCA,EACAC,EACAC,kBADc,sBACK,OAIfC,EAAeC,OAAOC,YAIpBC,EAAaN,EAAQO,wBAAwBC,IAC7CC,EAAgBT,EAAQU,aACxBC,EAAgBL,EAAaG,EAAgB,EAC7CG,EAAgBN,EAAaG,YAMD,QAA9BR,EAAYY,cACGP,EACsB,WAA9BL,EAAYY,cACJF,EACsB,WAA9BV,EAAYY,cACJD,EAEAN,GAKEH,GAAgBD,EAAmB,MAKrBC,GAAgBS,GAAiB"}